-- DBA 계정 생성
DELETE USER dbadmin;

CREATE USER dbadmin IDENTIFIED BY "1234";
GRANT RESOURCE, CONNECT, DBA TO dbadmin;

DROP TABLE MEMBER;
DROP SEQUENCE SEQ_UNO;
DROP TABLE CAMPING_INFO;
DROP SEQUENCE SEQ_BUSINESS_NO;
DROP TABLE NOTICE;
DROP SEQUENCE SEQ_NOTICE_NO;
DROP TABLE QNA;
DROP SEQUENCE SEQ_QNA_NO;
DROP TABLE REPLY;
DROP SEQUENCE SEQ_REPLY_NO;


----@@@@ 회원정보 MEMBER @@@@----
--------------------------------


CREATE TABLE MEMBER (
  NO    NUMBER PRIMARY KEY,
  BUSINESS_NO CHAR(12) UNIQUE,
  ID    VARCHAR2(20) UNIQUE,
  PWD   VARCHAR2(20) NOT NULL,
  EMAIL VARCHAR2(30) NOT NULL,
  NAME  VARCHAR2(20) NOT NULL,
  PHONE CHAR(13) NOT NULL,
  NICK  VARCHAR2(20) NOT NULL,
  ENROLL_DATE DATE DEFAULT SYSDATE,
  MODIFY_DATE DATE DEFAULT SYSDATE,
  ROLE  VARCHAR2(30) DEFAULT 'ROLE_USER',
  STATUS  CHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N'))
);

COMMENT ON COLUMN MEMBER.NO IS '회원번호';
COMMENT ON COLUMN MEMBER.BUSINESS_NO IS '사업자등록번호';
COMMENT ON COLUMN MEMBER.ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.NAME IS '회원명';
COMMENT ON COLUMN MEMBER.PHONE IS '핸드폰번호';
COMMENT ON COLUMN MEMBER.NICK IS '닉네임';
COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '회원가입일';
COMMENT ON COLUMN MEMBER.MODIFY_DATE IS '정보수정일';
COMMENT ON COLUMN MEMBER.ROLE IS '권한';
COMMENT ON COLUMN MEMBER.STATUS IS '상태값(Y/N)';

CREATE SEQUENCE SEQ_UNO;

INSERT INTO MEMBER (
    NO,
    BUSINESS_NO,
    ID,
    PWD,
    EMAIL,
    NAME,
    PHONE,
    NICK,
    ENROLL_DATE,
    MODIFY_DATE,
    ROLE,
    STATUS
) VALUES (
    SEQ_UNO.NEXTVAL,
    '123-4567-890',
    'admin',
    '1234',
    'ADMIN@CAMPFIVE.COM',
    '관리자',
    '010-0000-0000',
    '고나리자',
    DEFAULT,
    DEFAULT,
    'DBA',
    DEFAULT
);

COMMIT;

SELECT * FROM MEMBER WHERE ID='admin' AND STATUS = 'Y';

-- 멤버 조회
SELECT * FROM MEMBER WHERE ID=? AND STATUS = 'Y';
-- 회원 조회
SELECT * FROM MEMBER WHERE ID=? AND STATUS = 'Y' AND GUBUN = 1;
-- 멤버 추가
INSERT INTO MEMBER VALUES(SEQ_UNO.NEXTVAL ,DEFAULT, ?, ?, ?, ?, ?, ?,DEFAULT, DEFAULT, DEFAULT, DEFAULT);
-- 멤버 수정
UPDATE MEMBER SET EMAIL=?, PHONE=?, NICK=?, MODIFY_DATE=SYSDATE WHERE NO=?;
-- 멤버 패스워드 변경
UPDATE MEMBER SET PWD=? WHERE NO=?;
-- 멤버 삭제
UPDATE MEMBER SET STATUS=? WHERE NO=?;



----@@@ 캠핑리뷰 CAMPING_INFO @@@----
------------------------------
CREATE TABLE CAMPING_INFO (
    NO NUMBER PRIMARY KEY,
    WRITE_NO NUMBER,
    CEO_NAME VARCHAR2(20) NOT NULL,
    ADDRESS VARCHAR2(50) NOT NULL UNIQUE,
    PHONE CHAR(13) NOT NULL, UNIQUE,
    ENV VARCHAR2(30),
    TYPE VARCHAR2(30),
    OPERATING_SEASON VARCHAR2(30),
    OPERATING_DAYS VARCHAR2(30),
    HOMPAGE VARCHAR2(50),
    RESERV VARCHAR2(20),
    ABOUT VARCHAR2(300),
    CONSTRAINT FK_CAMPING_INFO_NO FOREIGN KEY(WRITE_NO) REFERENCES MEMBER(NO) ON DELETE SET NULL
);

CREATE SEQUENCE SEQ_BUSINESS_NO;


----@@@리뷰 REVIEW@@@----
-----------------------------


CREATE TABLE REVIEW (
    NO NUMBER PRIMARY KEY,
    WRITE_NO NUMBER NOT NULL,
    TITLE VARCHAR2(100) NOT NULL,
    CONTENT VARCHAR2(1000),
    CREATE_DATE DATE DEFAULT SYSDATE,
    MODIFY_DATE DATE DEFAULT SYSDATE,
    HIT NUMBER DEFAULT 0,
    STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N')),
    CONSTRAINT FK_REVIEW FOREIGN KEY(WRITE_NO) REFERENCES MEMBER(NO) ON DELETE SET NULL
);

COMMENT ON COLUMN REVIEW.NO IS '게시글번호';
COMMENT ON COLUMN REVIEW.WRITER_NO IS '게시글작성자';
COMMENT ON COLUMN REVIEW.TITLE IS '게시글제목';
COMMENT ON COLUMN REVIEW.CONTENT IS '게시글내용';
COMMENT ON COLUMN REVIEW.CREATE_DATE IS '게시글작성일자';
COMMENT ON COLUMN REVIEW.MODIFY_DATE IS '게시글수정일자';
COMMENT ON COLUMN REVIEW.HIT IS '조회수';
COMMENT ON COLUMN REVIEW.STATUS IS '활성상태';

CREATE SEQUENCE SEQ_REVIEW_NO;

INSERT INTO REVIEW VALUES(SEQ_REVIEW_NO.NEXTVAL, '1', 'REVIEW 게시글테스트1', 'REVIEW 게시글테스트중입니다1', DEFAULT, DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REVIEW VALUES(SEQ_REVIEW_NO.NEXTVAL, '1', 'REVIEW 게시글테스트2', 'REVIEW 게시글테스트중입니다2', DEFAULT, DEFAULT, DEFAULT, DEFAULT);

COMMIT;


BEGIN
    FOR N IN 1..52
    LOOP
        INSERT INTO REVIEW VALUES(SEQ_REVIEW_NO.NEXTVAL, '1', 'REVIEW 게시글테스트 ' || SEQ_REVIEW_NO.CURRVAL , 'REVIEW 게시글테스트중입니다 ' || SEQ_REVIEW_NO.CURRVAL, DEFAULT, DEFAULT, DEFAULT, DEFAULT);
    END LOOP;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

-- 목록 조회(페이징) 쿼리문
SELECT RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, STATUS
FROM (
  SELECT ROWNUM AS RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, STATUS
  FROM (
    SELECT ROWNUM, R.NO, M.ID, R.TITLE, R.CONTENT, R.CREATE_DATE, R.MODIFY_DATE, R.HIT, R.STATUS
    FROM REVIEW R JOIN MEMBER M ON(R.WRITE_NO = M.NO)
    WHERE R.STATUS = 'Y' ORDER BY R.NO DESC
  )
)
WHERE RNUM BETWEEN 1 AND 2;

"SELECT RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, STATUS " +
"FROM ( " +
"  SELECT ROWNUM AS RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, STATUS " +
"  FROM ( " +
"    SELECT ROWNUM, R.NO, M.ID, R.TITLE, R.CONTENT, R.CREATE_DATE, R.MODIFY_DATE, R.HIT, R.STATUS " +
"    FROM REVIEW R JOIN MEMBER M ON(R.WRITE_NO = M.NO) " +
"    WHERE R.STATUS = 'Y' ORDER BY R.NO DESC " +
"  ) " +
") " +
"WHERE RNUM BETWEEN ? AND ?";





----@@@공지사항 NOTICE @@@----
-----------------------------


CREATE TABLE NOTICE (
    NO NUMBER PRIMARY KEY,
    WRITE_NO NUMBER NOT NULL,
    TITLE VARCHAR2(100) NOT NULL,
    CONTENT VARCHAR2(1000),
    CREATE_DATE DATE DEFAULT SYSDATE,
    MODIFY_DATE DATE DEFAULT SYSDATE,
    HIT NUMBER DEFAULT 0,
    STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N')),
    CONSTRAINT FK_NOTICE FOREIGN KEY(WRITE_NO) REFERENCES MEMBER(NO) ON DELETE SET NULL
);

COMMENT ON COLUMN NOTICE.NO IS '게시글번호';
COMMENT ON COLUMN NOTICE.WRITER_NO IS '게시글작성자';
COMMENT ON COLUMN NOTICE.TITLE IS '게시글제목';
COMMENT ON COLUMN NOTICE.CONTENT IS '게시글내용';
COMMENT ON COLUMN NOTICE.CREATE_DATE IS '게시글작성일자';
COMMENT ON COLUMN NOTICE.MODIFY_DATE IS '게시글수정일자';
COMMENT ON COLUMN NOTICE.HIT IS '조회수';
COMMENT ON COLUMN NOTICE.STATUS IS '활성상태';

CREATE SEQUENCE SEQ_NOTICE_NO;

INSERT INTO NOTICE VALUES(SEQ_NOTICE_NO.NEXTVAL, '1', 'NOTICE 게시글테스트1', 'NOTICE 게시글테스트중입니다1', DEFAULT, DEFAULT, DEFAULT, DEFAULT);
INSERT INTO NOTICE VALUES(SEQ_NOTICE_NO.NEXTVAL, '1', 'NOTICE 게시글테스트2', 'NOTICE 게시글테스트중입니다2', DEFAULT, DEFAULT, DEFAULT, DEFAULT);

COMMIT;


BEGIN
    FOR N IN 1..52
    LOOP
        INSERT INTO NOTICE VALUES(SEQ_NOTICE_NO.NEXTVAL, '1', 'NOTICE 게시글테스트 ' || SEQ_NOTICE_NO.CURRVAL , 'NOTICE 게시글테스트중입니다 ' || SEQ_NOTICE_NO.CURRVAL, DEFAULT, DEFAULT, DEFAULT, DEFAULT);
    END LOOP;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

-- 목록 조회(페이징) 쿼리문
SELECT RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, STATUS
FROM (
  SELECT ROWNUM AS RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, STATUS
  FROM (
    SELECT ROWNUM, N.NO, M.ID, N.TITLE, N.CONTENT, N.CREATE_DATE, N.MODIFY_DATE, N.HIT, N.STATUS
    FROM NOTICE N JOIN MEMBER M ON(N.WRITE_NO = M.NO)
    WHERE N.STATUS = 'Y' ORDER BY N.NO DESC
  )
)
WHERE RNUM BETWEEN 1 AND 2;

"SELECT RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, STATUS " +
"FROM ( " +
"  SELECT ROWNUM AS RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, STATUS " +
"  FROM ( " +
"    SELECT ROWNUM, N.NO, M.ID, N.TITLE, N.CONTENT, N.CREATE_DATE, N.MODIFY_DATE, N.HIT, N.STATUS " +
"    FROM NOTICE N JOIN MEMBER M ON(N.WRITE_NO = M.NO) " +
"    WHERE N.STATUS = 'Y' ORDER BY N.NO DESC " +
"  ) " +
") " +
"WHERE RNUM BETWEEN ? AND ?";


-- 총 게시글 개수
SELECT COUNT(*) FROM NOTICE WHERE STATUS = 'Y'
-- 조회수 증가
UPDATE NOTICE SET HIT=? WHERE NO=?
-- 게시글 작성
INSERT INTO NOTICE VALUES(SEQ_NOTICE_NO.NEXTVAL,?,?,?,DEFAULT,DEFAULT,DEFAULT,DEFAULT)
-- 게시글 수정
UPDATE NOTICE SET TITLE=?.CONTENT=?,MODIFY_DATE=SYSDATE WHRE NO=?
-- 게시글 삭제
UPDATE NOTICE SET STATUS=? WHERE NO=?


-------@@@@ Q&A QNA @@@@-------
-------------------------------


CREATE TABLE QNA (
    NO NUMBER PRIMARY KEY,
    WRITE_NO NUMBER NOT NULL,
    TITLE VARCHAR2(100) NOT NULL,
    CONTENT VARCHAR2(1000),
    CREATE_DATE DATE DEFAULT SYSDATE,
    MODIFY_DATE DATE DEFAULT SYSDATE,
    PWD VARCHAR2(20) NOT NULL,
    HIT NUMBER DEFAULT 0,
    STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N')),
    CONSTRAINT FK_QNA_NO FOREIGN KEY(WRITE_NO) REFERENCES MEMBER(NO) ON DELETE SET NULL
);

COMMENT ON COLUMN QNA.NO IS '게시글번호';
COMMENT ON COLUMN QNA.WRITE_NO IS '게시글작성자';
COMMENT ON COLUMN QNA.TITLE IS '게시글제목';
COMMENT ON COLUMN QNA.CONTENT IS '게시글내용';
COMMENT ON COLUMN QNA.CREATE_DATE IS '게시글작성일자';
COMMENT ON COLUMN QNA.MODIFY_DATE IS '게시글수정일자';
COMMENT ON COLUMN QNA.PWD IS '게시글비밀번호';
COMMENT ON COLUMN QNA.HIT IS '조회수';
COMMENT ON COLUMN QNA.STATUS IS '활성상태';

CREATE SEQUENCE SEQ_QNA_NO;

INSERT INTO QNA VALUES(SEQ_QNA_NO.NEXTVAL, '1', 'QNA 게시글테스트1', 'QNA 게시글테스트중입니다', DEFAULT, DEFAULT, '1234', DEFAULT, DEFAULT);

BEGIN
    FOR N IN 1..52
    LOOP
        INSERT INTO QNA VALUES(SEQ_QNA_NO.NEXTVAL, '1', 'QNA 게시글테스트1 ' || SEQ_QNA_NO.CURRVAL, 'QNA 게시글테스트중입니다 ' || SEQ_QNA_NO.CURRVAL, DEFAULT, DEFAULT, '1234', DEFAULT, DEFAULT);
    END LOOP;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

COMMIT;

-- 목록 조회(페이징) 쿼리문
SELECT RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, PWD, HIT, STATUS
FROM (
  SELECT ROWNUM AS RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, PWD, HIT, STATUS
  FROM (
    SELECT ROWNUM, Q.NO, M.ID, Q.TITLE, Q.CONTENT, Q.CREATE_DATE, Q.MODIFY_DATE, Q.PWD, Q.HIT, Q.STATUS
    FROM QNA Q JOIN MEMBER M ON(Q.WRITE_NO = M.NO)
    WHERE Q.STATUS = 'Y' ORDER BY Q.NO DESC
  )
)
WHERE RNUM BETWEEN 1 AND 2;

"SELECT RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, PWD, HIT, STATUS " +
"FROM ( " +
"  SELECT ROWNUM AS RNUM, NO, ID, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, PWD, HIT, STATUS " +
"  FROM ( " +
"    SELECT ROWNUM, Q.NO, M.ID, Q.TITLE, Q.CONTENT, Q.CREATE_DATE, Q.MODIFY_DATE, Q.PWD, Q.HIT, Q.STATUS " +
"    FROM QNA Q JOIN MEMBER M ON(Q.WRITE_NO = M.NO) " +
"    WHERE Q.STATUS = 'Y' ORDER BY Q.NO DESC " +
"  ) " +
") " +
"WHERE RNUM BETWEEN ? AND ?";


-- 총 게시글 개수
SELECT COUNT(*) FROM QNA WHERE STATUS = 'Y'
-- 조회수 증가
UPDATE QNA SET HIT=? WHERE NO=?
-- 게시글 작성
INSERT INTO QNA VALUES(SEQ_NOTICE_NO.NEXTVAL,?,?,?,DEFAULT,DEFAULT,?,DEFAULT,DEFAULT)
-- 게시글 수정
UPDATE QNA SET TITLE=?.CONTENT=?,MODIFY_DATE=SYSDATE,PWD=? WHERE NO=?
-- 게시글 삭제
UPDATE QNA SET STATUS=?,PWD=? WHERE NO=?


-------@@@@ Q&A 댓글 REPLY @@@@-------
--------------------------------------


CREATE TABLE REPLY (
    NO NUMBER PRIMARY KEY,
    WRITE_NO NUMBER,
    QNA_NO NUMBER,
    CONTENT VARCHAR(100) NOT NULL,
    CREATE_DATE DATE DEFAULT SYSDATE,
    MODIFY_DATE DATE DEFAULT SYSDATE,
    STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N')),
    CONSTRAINT FK_REPLY_WRITE_NO FOREIGN KEY(WRITE_NO) REFERENCES MEMBER(NO) ON DELETE SET NULL,
    CONSTRAINT FK_REPLY_QNA_NO FOREIGN KEY(QNA_NO) REFERENCES QNA(NO) ON DELETE SET NULL
);

CREATE SEQUENCE SEQ_REPLY_NO;

COMMENT ON COLUMN REPLY.NO IS '댓글번호';
COMMENT ON COLUMN REPLY.WRITE_NO IS '댓글작성자';
COMMENT ON COLUMN REPLY.QNA_NO IS '게시글번호';
COMMENT ON COLUMN REPLY.CONTENT IS '댓글내용';
COMMENT ON COLUMN REPLY.CREATE_DATE IS '댓글작서일자';
COMMENT ON COLUMN REPLY.MODIFY_DATE IS '댓글수정일자';
COMMENT ON COLUMN REPLY.STATUS IS '활성상태';

INSERT INTO REPLY VALUES(SEQ_REPLY_NO.NEXTVAL, 1, 1, '댓글테스트1', DEFAULT, DEFAULT, DEFAULT);

COMMIT;

-- 댓글 작성
INSERT INTO REPLY VALUES(SEQ_REPLY_NO.NEXTVAL,?,?,?,DEFAULT,DEFAULT,DEFAULT)






















